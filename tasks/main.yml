---
# tasks file for cassandra

- name: Install prerequirements
  yum:
    name: "{{ item }}"
    state: present
  with_items: "{{ casssanrda_prerequirements }}"

- name: Create cassandra group
  group:
    name: "{{ cassandra_group }}"
    gid: "{{ cassandra_group_id}}"
    system: yes

- name: Create cassandra group
  user:
    name: "{{ cassandra_user }}"
    comment: "Cassandra service user"
    uid: "{{ cassandra_user_id }}"
    group: "{{ cassandra_group }}"
    system: yes

- name: Add Apache Cassandra repository
  yum_repository:
    name: cassandra
    description: Apache cassandra repository
    baseurl: "{{ cassandra_repo_baseurl }}"
    gpgkey: "{{ cassandra_repo_gpgkey }}"
    gpgcheck: yes

- name: Install Cassandra package
  yum:
    name:  "{{ item }}"
    state: present
  with_items:
    - cassandra

- name: Copy cassandra-env.sh
  template:
    src: cassandra-env.sh.j2
    dest: /etc/cassandra/default.conf/cassandra-env.sh
    owner: root
    group: root
    mode: 0755
  notify: restart cassandra

- name: Copy cassandra.yaml
  template:
    src: cassandra.yaml.j2
    dest: /etc/cassandra/default.conf/cassandra.yaml
    owner: root
    group: root
    mode: 0755
  notify: restart cassandra

- name: Copy cassandra-rackdc.properties
  template:
    src: cassandra-rackdc.properties.j2
    dest: /etc/cassandra/default.conf/cassandra-rackdc.properties
    owner: root
    group: root
    mode: 0644
  notify: restart cassandra

- name: Start and enable cassandra service
  systemd:
    name: cassandra
    state: started
    enabled: yes

- name: Verify that node status is up
  shell: "nodetool status | grep {{ ansible_default_ipv4.address }} | cut -d ' ' -f 1"
  register: node_status
  retries: 10
  delay: 10
  until: node_status.stdout == "UN"
  check_mode: no
  changed_when: false

- name: Verify that node port is responding
  wait_for:
    host: 127.0.0.1
    state: started
    timeout: 300
    port: 9042
